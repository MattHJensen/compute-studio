import * as React from "react";
import ReactLoading from "react-loading";
import { Card, Row, Col, OverlayTrigger, Tooltip } from "react-bootstrap";
import { RemoteOutputs, Outputs } from "./types";

interface OutputsProps {
  fetchRemoteOutputs: () => Promise<RemoteOutputs>;
  fetchOutputs: () => Promise<Outputs>;
}

type OutputsState = Readonly<{
  remoteOutputs?: RemoteOutputs;
  outputs?: Outputs;
}>;

export default class OutputsComponent extends React.Component<
  OutputsProps,
  OutputsState
> {
  constructor(props) {
    super(props);
    this.state = {
      remoteOutputs: null,
      outputs: null
    };
  }

  componentDidMount() {
    this.props.fetchRemoteOutputs().then(data => {
      this.setState({ remoteOutputs: data });
    });
  }

  render() {
    if (!this.state.remoteOutputs) {
      return (
        <Card className="card-outer">
          <Card.Body>
            <div className="d-flex justify-content-center">
              <ReactLoading type="spokes" color="#2b2c2d" />
            </div>
          </Card.Body>
        </Card>
      );
    }
    console.log(this.state.remoteOutputs);
    let creation_date = "09-26-2019";
    let model_version = "1.0";
    let project_title = "Tax-Cruncher";
    return (
      <Card className="card-outer" style={{ overflow: "auto" }}>
        <Card className="card-inner">
          <Card.Body>
            <p className="lead">
              <h5>{`These results were generated by ${project_title} on ${creation_date} using ${model_version}.`}</h5>
            </p>
            <Row className="text-center">
              {this.state.remoteOutputs.renderable.outputs.map(
                (remoteOutput, ix) => (
                  <Col style={{ padding: 0 }} key={`output-${ix}`}>
                    <OverlayTrigger
                      trigger={["hover", "click"]}
                      overlay={
                        <Tooltip id={`${ix}-tooltip`}>
                          {remoteOutput.title}
                        </Tooltip>
                      }
                    >
                      <img
                        style={{ objectFit: "contain" }}
                        src={remoteOutput.screenshot}
                        alt={remoteOutput.title}
                        height={500}
                        width={500}
                      />
                    </OverlayTrigger>
                  </Col>
                )
              )}
            </Row>
          </Card.Body>
        </Card>
      </Card>
    );
  }
}
