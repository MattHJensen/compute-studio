import * as React from "react";
import ReactLoading from "react-loading";
import { Card, Row, Col, OverlayTrigger, Tooltip } from "react-bootstrap";
import * as moment from "moment";
import { RemoteOutputs, Outputs, SimAPIData } from "./types";

interface OutputsProps {
  fetchRemoteOutputs: () => Promise<SimAPIData<RemoteOutputs>>;
  fetchOutputs: () => Promise<SimAPIData<Outputs>>;
}

type OutputsState = Readonly<{
  remoteSim: SimAPIData<RemoteOutputs>;
  sim: SimAPIData<Outputs>;
}>;

export default class OutputsComponent extends React.Component<
  OutputsProps,
  OutputsState
> {
  constructor(props) {
    super(props);
    this.state = {
      remoteSim: null,
      sim: null
    };
  }

  componentDidMount() {
    this.props.fetchRemoteOutputs().then(data => {
      this.setState({ remoteSim: data });
    });
  }

  render() {
    if (!this.state.remoteSim) {
      return (
        <Card className="card-outer">
          <Card.Body>
            <div className="d-flex justify-content-center">
              <ReactLoading type="spokes" color="#2b2c2d" />
            </div>
          </Card.Body>
        </Card>
      );
    }
    let creation_date = moment(this.state.remoteSim.creation_date).format(
      "MMMM Do YYYY, h:mm:ss a"
    );
    let model_version = this.state.remoteSim.model_version;
    let project = this.state.remoteSim.project;
    let remoteOutputs = this.state.remoteSim.outputs.outputs;
    return (
      <Card className="card-outer" style={{ overflow: "auto" }}>
        <Card className="card-inner">
          <Card.Body>
            <p className="lead">
              {`These results were generated by ${project.title} on ${creation_date} using ${model_version}.`}
            </p>
            <Row className="text-center">
              {remoteOutputs.renderable.outputs.map((remoteOutput, ix) => (
                <Col style={{ padding: 0 }} key={`output-${ix}`}>
                  <OverlayTrigger
                    trigger={["hover", "click"]}
                    overlay={
                      <Tooltip id={`${ix}-tooltip`}>
                        {remoteOutput.title}
                      </Tooltip>
                    }
                  >
                    <img
                      style={{ objectFit: "contain" }}
                      src={remoteOutput.screenshot}
                      alt={remoteOutput.title}
                      height={500}
                      width={500}
                    />
                  </OverlayTrigger>
                </Col>
              ))}
            </Row>
          </Card.Body>
        </Card>
      </Card>
    );
  }
}
